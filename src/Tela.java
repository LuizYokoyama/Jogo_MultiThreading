

import java.applet.Applet;
import java.applet.AudioClip;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.net.URL;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import javax.imageio.ImageIO;
import javax.swing.JOptionPane;

import javax.swing.Timer;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Luiz Felix
 */
public class Tela extends javax.swing.JFrame {
   
     Timer temporizador;
     static NaveFalcon falcon;
     static BufferedImage tieImage;
     static BufferedImage falconImage;
     static BufferedImage falconShield;
     
     static BufferedImage laserAzul, laserVerm;
     static BufferedImage laserAzul0, laserVerm0;
     static BufferedImage[] explosao;
     static BufferedImage[] explosaoFalcon;
     
    BufferedImage bufferTela;
    private  static boolean atirar = false;
    private List<MeuTiro> meusTiros;
    private List<NaveTie> ties;
    private Random random;
    static int geraInimigos=0;
    
    private long ultimoTiro = 0;
    public static final int telaX= 900;
    public static final int telaY= 600;
    public static final int margem= 3;
    private static int nInimigos;
    public static int vidas;
    public static double tempo;
    public static int pontos;
    public static AudioClip musica;
    public static AudioClip blaster1;
    public static AudioClip blaster2;
    public static AudioClip explosao1;
    public static AudioClip explosao2;
    
    
    

    /**
     * Creates new form Tela
     */
    public Tela() {
        initComponents();
        carregaRecursos();
        novoJogo();
        telaJogo.setIgnoreRepaint(true);
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lVidas = new javax.swing.JLabel();
        lTempo = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lPlacar = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        telaJogo = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("STAR WARS - AP2");
        setIconImages(null);
        setResizable(false);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formKeyReleased(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText(" VIDAS:");
        jLabel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(102, 204, 255), null, null));

        lVidas.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lVidas.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lVidas.setText(" 3");
        lVidas.setToolTipText("");
        lVidas.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(102, 204, 255), null, null));

        lTempo.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lTempo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lTempo.setText("0 s");
        lTempo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(0, 255, 0), null, null));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText(" TEMPO:");
        jLabel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(0, 255, 0), null, null));

        lPlacar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lPlacar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lPlacar.setText("0 ");
        lPlacar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(255, 0, 0), null, null));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText(" PLACAR:");
        jLabel6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(255, 0, 0), null, null));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lVidas, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lTempo, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(99, 99, 99)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lPlacar, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lVidas, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                    .addComponent(lPlacar)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(lTempo)
                        .addGap(2, 2, 2))
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        telaJogo.setBackground(new java.awt.Color(0, 0, 0));
        telaJogo.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        telaJogo.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        telaJogo.setPreferredSize(new java.awt.Dimension(900, 600));

        javax.swing.GroupLayout telaJogoLayout = new javax.swing.GroupLayout(telaJogo);
        telaJogo.setLayout(telaJogoLayout);
        telaJogoLayout.setHorizontalGroup(
            telaJogoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 900, Short.MAX_VALUE)
        );
        telaJogoLayout.setVerticalGroup(
            telaJogoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 598, Short.MAX_VALUE)
        );

        jMenu1.setText("Jogo");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem1.setText("Novo Jogo");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem2.setText("Pausar");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Ajuda");

        jMenuItem4.setText("Sobre");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem4);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(telaJogo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(telaJogo, javax.swing.GroupLayout.DEFAULT_SIZE, 598, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
         if (evt.getKeyCode()==KeyEvent.VK_RIGHT){
             
            falcon.setDireita(true);
        }
         if (evt.getKeyCode()==KeyEvent.VK_LEFT){
             
            falcon.setEsquerda(true);
        }
         
            if (evt.getKeyChar()==' '){
            atirar=true;
         
        }
        
    }//GEN-LAST:event_formKeyPressed

    private void formKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyReleased
        
         if (evt.getKeyCode()==KeyEvent.VK_RIGHT){
             
            falcon.setDireita(false);
        }
         if (evt.getKeyCode()==KeyEvent.VK_LEFT){
             
            falcon.setEsquerda(false);
        }
         if (evt.getKeyChar()==' ') atirar= false;
    }//GEN-LAST:event_formKeyReleased

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        novoJogo();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        if (temporizador!= null)
        {
            if (temporizador.isRunning())  {
                temporizador.stop();
                musica.stop();
                
            }
            else{
                temporizador.restart();
                musica.loop();
            }
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        JOptionPane.showMessageDialog(null, "Star Wars - Projeto final de AP2\nEngenharia de Computação - "
                + "UFG\nAutores: Luiz, Daniel e Iury."
                + "\nLicença para fins educacionais.", "Sobre o jogo", JOptionPane.INFORMATION_MESSAGE );
        
    }//GEN-LAST:event_jMenuItem4ActionPerformed

        private void carregaRecursos() {
            URL url;
            explosao = new BufferedImage[6];
            explosaoFalcon = new BufferedImage[8];
            url = getClass().getResource("/imperial.wav");
            musica = Applet.newAudioClip(url);

            url = getClass().getResource("/blaster1.wav");
            blaster1 = Applet.newAudioClip(url);

            url = getClass().getResource("/blaster2.wav");
            blaster2 = Applet.newAudioClip(url);
            
            url = getClass().getResource("/explosao1.wav");
            explosao1 = Applet.newAudioClip(url);

            url = getClass().getResource("/explosao2.wav");
            explosao2 = Applet.newAudioClip(url);
            
            

            
         try {
                        url = this.getClass().getClassLoader().getResource("falcon.png");
			falconImage = ImageIO.read(url);
                        url = this.getClass().getClassLoader().getResource("falconI.png");
			falconShield = ImageIO.read(url);
                        url = this.getClass().getClassLoader().getResource("tie.png");
			tieImage = ImageIO.read(url);
                        
			url = this.getClass().getClassLoader().getResource("la.png");
                        laserAzul = ImageIO.read(url);        
			url = this.getClass().getClassLoader().getResource("la0.png");
                        laserAzul0 = ImageIO.read(url);
                        
                        url = this.getClass().getClassLoader().getResource("lv.png");
                        laserVerm = ImageIO.read(url);           
                        url = this.getClass().getClassLoader().getResource("lv0.png");
                        laserVerm0 = ImageIO.read(url);
                        
                        url = this.getClass().getClassLoader().getResource("explod0.png");
                        explosao[0] = ImageIO.read(url);                
                        url = this.getClass().getClassLoader().getResource("explod1.png");
                        explosao[1] = ImageIO.read(url);     
                        url = this.getClass().getClassLoader().getResource("explod2.png");
                        explosao[2] = ImageIO.read(url);
                        url = this.getClass().getClassLoader().getResource("explod3.png");
                        explosao[3] = ImageIO.read(url);         
                        url = this.getClass().getClassLoader().getResource("explod4.png");
                        explosao[4] = ImageIO.read(url);
                        url = this.getClass().getClassLoader().getResource("explod5.png");
                        explosao[5] = ImageIO.read(url);
                        
                        url = this.getClass().getClassLoader().getResource("expFalcon0.png");
                        explosaoFalcon[0] = ImageIO.read(url);
                        url = this.getClass().getClassLoader().getResource("expFalcon1.png");
                        explosaoFalcon[1] = ImageIO.read(url);
                        url = this.getClass().getClassLoader().getResource("expFalcon2.png");
                        explosaoFalcon[2] = ImageIO.read(url);
                        url = this.getClass().getClassLoader().getResource("expFalcon3.png");
                        explosaoFalcon[3] = ImageIO.read(url);
                        url = this.getClass().getClassLoader().getResource("expFalcon4.png");
                        explosaoFalcon[4] = ImageIO.read(url);
                        url = this.getClass().getClassLoader().getResource("expFalcon5.png");
                        explosaoFalcon[5] = ImageIO.read(url);
                        url = this.getClass().getClassLoader().getResource("expFalcon6.png");
                        explosaoFalcon[6] = ImageIO.read(url);
                        url = this.getClass().getClassLoader().getResource("expFalcon7.png");
                        explosaoFalcon[7] = ImageIO.read(url);
                        
		} catch (IOException e) {
			
		}
    }
    
   
        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               
                new Tela().setVisible(true);
               
              
               
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lPlacar;
    private javax.swing.JLabel lTempo;
    private javax.swing.JLabel lVidas;
    private static javax.swing.JPanel telaJogo;
    // End of variables declaration//GEN-END:variables

    private void criaNovoTie() {
        if (nInimigos<11){
                geraInimigos++;
                
                if ((geraInimigos%100 == 0) ){ //CRIA OUTRO A CADA 100 INTERVALOS DE TEMPO
                    NaveTie inimigo = new NaveTie(bufferTela.getGraphics(), random.nextInt(telaX-NaveTie.largura), -100, tieImage);
                    ties.add(inimigo);
                    inimigo.start();
                    nInimigos++;
                }
            }
    }

    private void moveMeusTiros() {
        for (MeuTiro mt: meusTiros ){
                mt.resume();             
                // EXPLODINDO "TIE FIGHTERS" 
                for (NaveTie nt: ties){

                        if (!nt.explodiu)
                            if ((nt.x + nt.largura-margem > mt.x) && (nt.x-margem<mt.x+mt.largura) 
                                    && (nt.y+nt.altura-margem > mt.y) && (nt.y-margem < mt.y+mt.altura)){
                                nt.explode();
                                nInimigos--;
                                pontos+= 13;
                                mt.explode();  
                            }
                }
            }
    }

    private void falconAtirar() {
        if (atirar) {
                if (System.currentTimeMillis()-ultimoTiro>=200){
                    ultimoTiro= System.currentTimeMillis();
                    MeuTiro meuTiro = new MeuTiro(bufferTela.getGraphics(), falcon.x, falcon.y, laserAzul, laserAzul0);
                    meusTiros.add(meuTiro);
                    meuTiro.start();
                }
            }
    }

    private void moveTieFighters() {
        for (NaveTie nt: ties){ //MOVE "TIE FIGHTERS"
                nt.resume();
            }
    }

    private void novoJogo() {
        vidas=3;
        tempo=0;
        pontos=0;
        nInimigos=0;
        
        meusTiros = new ArrayList<>();
        ties = new ArrayList<>();
        random= new Random();
        musica.loop();
        
        bufferTela= new BufferedImage(telaX,telaY,BufferedImage.TYPE_INT_RGB);
        bufferTela.setRGB(0, 0, 0);
         
        falcon = new NaveFalcon(bufferTela.getGraphics(), (telaX/2)-NaveFalcon.largura/2, telaY-100, falconImage);
        
        falcon.start();
        
        if (temporizador != null) temporizador.stop();
        temporizador = new Timer(10, (ActionEvent evt) -> {
            
            
            telaJogo.getGraphics().drawImage(bufferTela, 0, 0, null);
            telaJogo.update(bufferTela.getGraphics());
        
             
            falcon.resume();
            if (vidas>0) falconAtirar();
            moveMeusTiros();
            
            criaNovoTie();
            moveTieFighters();

           
            if (vidas>0) tempo+=0.01;
            lVidas.setText(vidas+"");
            lTempo.setText(String.format("%6.1f s", tempo));
            lPlacar.setText(pontos+" pontos ");
        });
        
        temporizador.start();
    }

}
